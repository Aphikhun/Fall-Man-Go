#version 300 es

precision mediump float;

#include "headers/basic.glsl"
#include "headers/lighting.glsl"
#include "headers/fog.glsl"

uniform mediump vec4 multiCalColor;
uniform vec4 customColor;

out vec4 fragColor;

vec4 getLightMap() 
{
	return vec4(0.0);
}

void main(void)
{
	vec4 textureColor = texture(texSampler, texCoord);

	float temp = step(0.3, textureColor.a);
	textureColor = mix(vec4(mix(textureColor.rgb, customColor.rgb, customColor.w), 1.0), textureColor, temp);
	textureColor = vec4(mix(textureColor.rgb * multiCalColor.rgb, multiCalColor.rgb, multiCalColor.a), textureColor.a);

	vec3 pixelColor = CalcPixelLight(vec3(worldNormal), vec3(worldPos), textureColor);

	vec4 finalColor = vec4(pixelColor, 1.0);

	mediump vec4 oFogColor = CalcFogColor();

	fragColor = vec4(mix(oFogColor.rgb, finalColor.rgb, oFogColor.a), finalColor.a);
}
