#version 300 es
precision mediump float;
#include "headers/math/matrix.glsl"												
#include "headers/lighting.glsl"
#include "headers/shadow.glsl"
#ifdef USEFOG
#include "headers/fog.glsl"
#endif


// part 参数
uniform mediump sampler2DArray uMaterialLayerTexture;    // 图集
in mediump vec3  ourPosition;
in mediump vec3  ourNormal;
in mediump vec3  ourTexcoord;
in mediump vec4  ourColor;

mediump vec3 CalcAlbedo() {
    return texture(uMaterialLayerTexture, vec3(ourTexcoord.xy, int(ourTexcoord.z))).rgb;
}

vec4 getLightMap() {
    return vec4(0.0, 0.0, 0.0, 0.0);
}

out mediump vec4 fragColor;
void main() {
    mediump vec4 albedo = vec4(CalcAlbedo(), 1.0) * ourColor;
	vec3 pixelColor = CalcPixelLight(vec3(ourNormal), vec3(ourPosition), albedo);
    fragColor = vec4(pixelColor.rgb, 1.0);
    
// 如果开启雾
#ifdef USEFOG 	
	mediump vec4 oFogParame = CalcFogColor();
	fragColor = vec4(mix(oFogParame.rgb, pixelColor.rgb, oFogParame.w), finalColor.a);
#endif	// !USEFOG
}