#version 100
precision mediump float;

uniform vec3 lightPos;
uniform vec3 objectColor;
uniform float alpha;

varying mediump vec3 normal;
varying mediump vec3 fragPos;

void main(void)
{
	// vec3 lightColor = vec3(1.0, 1.0, 1.0);
	// // ambient
	// float ambientStrength = 0.40;
	// vec3 ambient = ambientStrength * lightColor;

	// // diffuse
	// vec3 norm = normalize(normal);
	// vec3 lightDir = normalize(lightPos - fragPos);
	// float diff = max(dot(norm, lightDir), 0.0);
	// vec3 diffuse = diff * lightColor;

	// vec3 result = (ambient +  diffuse) * objectColor;
	vec3 result = objectColor;
	gl_FragColor = vec4(result, alpha);
}