#version 100

precision mediump float;

uniform sampler2D ScnSamp;

varying vec2 texCoord;

vec3 rgb2hsv(vec3 c)
{
	vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
	vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
	vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
	float d = q.x - min(q.w, q.y);
	float e = 1.0e-10;
	return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}
vec3 hsv2rgb(vec3 c)
{
	vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
	vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
	return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void main(void)
{
    vec4 color = texture2D( ScnSamp, texCoord );
 
	vec3 hsv = rgb2hsv(color.rgb);
	if (hsv.z >= 0.7)
	{
		//hsv.z = min(1.0, hsv.z + 0.2);
		//color.rgb = hsv2rgb(hsv);
		
		vec2 pixelSize = vec2(1.0, 1.0);
		vec4 c = texture2D(ScnSamp, texCoord + pixelSize);
		c += texture2D(ScnSamp, texCoord + vec2(-pixelSize.x, -pixelSize.y));
		c += texture2D(ScnSamp, texCoord + vec2(pixelSize.x, -pixelSize.y));
		c += texture2D(ScnSamp, texCoord + vec2(-pixelSize.x, pixelSize.y));
		c += color;
		color.rgb = c.rgb / c.a;
		hsv = rgb2hsv(color.rgb);
		//hsv.z = min(1.0, hsv.z + 0.2);
		color.rgb = hsv2rgb(hsv);
	}
 
    gl_FragColor = color;
}