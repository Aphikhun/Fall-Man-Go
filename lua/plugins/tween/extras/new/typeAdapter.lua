---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Anybook.
--- DateTime: 2022/5/16 18:00
---
local adapter = {}
local mapping = {
    ["boolean"] = {
        getter = function(ins, key)
            return ins[key] and 1 or 0
        end,
        setter = function(ins, key, value)
            if value == 0 then
                ins[key] = false
            elseif value == 1 then
                ins[key] = true
            end
        end,
        to = function(_, _, value)
            return value and 1 or 0
        end
    }
}

local function typeReferee(ins, key)
    local val = ins[key]
    local typ = classof(val)
    return typ
end

function adapter:getter(ins, key)
    local map = mapping[typeReferee(ins, key)]
    if map and map.getter then
        return function()
            map.getter(ins, key)
        end
    else
        return function()
            return ins[key]
        end
    end
end

function adapter:setter(ins, key)
    local map = mapping[typeReferee(ins, key)]
    if map and map.setter then
        return function(val)
            map.setter(ins, key, val)
        end
    else
        return function(val)
            ins[key] = val
        end
    end
end

function adapter:to(ins, key, value)
    local map = mapping[typeReferee(ins, key)]
    if map and map.to then
        return map.to(ins, key, value)
    else
        return value
    end
end

return adapter