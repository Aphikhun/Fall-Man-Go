---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Anybook.
--- DateTime: 2022/5/6 10:21
---
local rankDataStore = {}

local rankDataHelper = require "service.rank_helper"

function rankDataStore:init(space)
    self._space = space
end

function rankDataStore:RequestData(key, callback)
    rankDataHelper:getData(self._space, key, function(_, value)
        if callback then
            callback(value)
        end
    end)
end

function rankDataStore:RequestRangeData(begin, ending, callback)
    rankDataHelper:getDataByRange(self._space, begin, ending, function(_, array)
        if callback then
            callback(array)
        end
    end)
end

function rankDataStore:SetData(key, value)
    rankDataHelper:setData(self._space, key, value)
end

function rankDataStore:IncreaseData(key, delta)
    rankDataHelper:incrementData(self._space, key, delta)
end

function rankDataStore:RemoveData(key)
    rankDataHelper:removeData(self._space, key)
end

function rankDataStore:UpdateData(key, callback)
    rankDataHelper:getData(self._space, key, function(_, value)
        if not callback then
            return
        end
        local ret = callback(value)
        if ret ~= nil then
            self:SetData(key, ret)
        end
    end)
end

function rankDataStore:SetExpireTime(timeStamp)
    rankDataHelper:setExpireTime(self._space, timeStamp)
end

return function(space)
    if type(space) ~= "string" then
        Lib.logError("space type does not match!")
        return
    end
    local derive = Lib.derive(rankDataStore)
    derive:init(space)
    return derive
end